---
openapi: 3.1.0
info:
  version: 1.0.0
  title: Example.com
  description: This is an example API to demonstrate features of OpenAPI specification
  termsOfService: https://example.com/terms/
  contact:
    email: contact@example.com
    url: http://example.com/contact
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: User
  description: Operations about user
servers:
- url: http://example.com/api/v1
- url: https://example.com/api/v1
paths:
  /users/{username}:
    parameters:
    - name: pretty_print
      in: query
      description: Pretty print response
      schema:
        type: boolean
    get:
      tags:
      - User
      summary: Get user by user name
      description: "Some description of the operation. \nYou can use `markdown` here.\n"
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        description: The name that needs to be fetched
        required: true
        schema:
          type: string
      - name: with_email
        in: query
        description: Filter users without email
        schema:
          type: boolean
      security:
      - main_auth:
        - read:users
      - api_key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                username: user1
                email: user@example.com
        "403":
          description: Forbidden
        "404":
          description: User not found
components:
  schemas:
    Email:
      description: User email address
      type: string
      format: test
      example: john.smith@example.com
    User:
      type: object
      properties:
        username:
          description: User supplied username
          type: string
          minLength: 4
          example: John78
        email:
          $ref: '#/components/schemas/Email'
  headers:
    ExpiresAfter:
      description: date in UTC when token expires
      schema:
        type: string
        format: date-time
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.com/api/oauth/dialog
          scopes:
            read:users: read users info
            write:users: modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic