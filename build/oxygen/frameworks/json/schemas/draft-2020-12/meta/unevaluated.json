{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$vocabulary": {"https://json-schema.org/draft/2020-12/vocab/unevaluated": true},
    "title": "Unevaluated applicator vocabulary meta-schema",
    "type": [
        "object",
        "boolean"
    ],
    "properties": {
        "unevaluatedItems": {
            "$ref": "https://json-schema.org/draft/2020-12/schema",
            "description": "<html><body><div>The value of &quot;unevaluatedItems&quot; MUST be a valid JSON Schema.\n\nThe behavior of this keyword depends on the annotation results of adjacent keywords that apply to the instance location being validated. Specifically, the annotations from &quot;prefixItems&quot;, &quot;items&quot;, and &quot;contains&quot;, which can come from those keywords when they are adjacent to the &quot;unevaluatedItems&quot; keyword. Those three annotations, as well as &quot;unevaluatedItems&quot;, can also result from any and all adjacent in-place applicator (Section 10.2) keywords. This includes but is not limited to the in-place applicators defined in this document.\n\nIf no relevant annotations are present, the &quot;unevaluatedItems&quot; subschema MUST be applied to all locations in the array. If a boolean true value is present from any of the relevant annotations, &quot;unevaluatedItems&quot; MUST be ignored. Otherwise, the subschema MUST be applied to any index greater than the largest annotation value for &quot;prefixItems&quot;, which does not appear in any annotation value for &quot;contains&quot;.\n\nThis means that &quot;prefixItems&quot;, &quot;items&quot;, &quot;contains&quot;, and all in-place applicators MUST be evaluated before this keyword can be evaluated. Authors of extension keywords MUST NOT define an in-place applicator that would need to be evaluated after this keyword.\n\nIf the &quot;unevaluatedItems&quot; subschema is applied to any positions within the instance array, it produces an annotation result of boolean true, analogous to the behavior of &quot;items&quot;. This annotation affects the behavior of &quot;unevaluatedItems&quot; in parent schemas.\n\nOmitting this keyword has the same assertion behavior as an empty schema.<br/><br/>See <a href=\"https://json-schema.org/draft/2020-12/json-schema-core.html#name-unevaluateditems\">JSON Schema Specification</a></div></body></html>"
        },
        "unevaluatedProperties": {
            "$ref": "https://json-schema.org/draft/2020-12/schema",
            "description": "<html><body><div>The value of &quot;unevaluatedProperties&quot; MUST be a valid JSON Schema.\n\nThe behavior of this keyword depends on the annotation results of adjacent keywords that apply to the instance location being validated. Specifically, the annotations from &quot;properties&quot;, &quot;patternProperties&quot;, and &quot;additionalProperties&quot;, which can come from those keywords when they are adjacent to the &quot;unevaluatedProperties&quot; keyword. Those three annotations, as well as &quot;unevaluatedProperties&quot;, can also result from any and all adjacent in-place applicator (Section 10.2) keywords. This includes but is not limited to the in-place applicators defined in this document.\n\nValidation with &quot;unevaluatedProperties&quot; applies only to the child values of instance names that do not appear in the &quot;properties&quot;, &quot;patternProperties&quot;, &quot;additionalProperties&quot;, or &quot;unevaluatedProperties&quot; annotation results that apply to the instance location being validated.\n\nFor all such properties, validation succeeds if the child instance validates against the &quot;unevaluatedProperties&quot; schema.\n\nThis means that &quot;properties&quot;, &quot;patternProperties&quot;, &quot;additionalProperties&quot;, and all in-place applicators MUST be evaluated before this keyword can be evaluated. Authors of extension keywords MUST NOT define an in-place applicator that would need to be evaluated after this keyword.\n\nThe annotation result of this keyword is the set of instance property names validated by this keyword's subschema. This annotation affects the behavior of &quot;unevaluatedProperties&quot; in parent schemas.\n\nOmitting this keyword has the same assertion behavior as an empty schema.<br/><br/>See <a href=\"https://json-schema.org/draft/2020-12/json-schema-validation.html#name-unevaluatedproperties\">JSON Schema Specification</a></div></body></html>"
        }
    }
}