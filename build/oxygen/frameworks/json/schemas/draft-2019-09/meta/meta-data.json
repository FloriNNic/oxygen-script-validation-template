{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "https://json-schema.org/draft/2019-09/meta/meta-data",
    "$vocabulary": {"https://json-schema.org/draft/2019-09/vocab/meta-data": true},
    "title": "Meta-data vocabulary meta-schema",
    "type": [
        "object",
        "boolean"
    ],
    "properties": {
        "title": {
            "type": "string",
            "description": "<html><body><div>The value of \"title\" and \"description\" keywords MUST be a string.\n\nBoth of these keywords can be used to decorate a user interface with information about the data produced by this user interface. A title will preferably be short, whereas a description will provide explanation about the purpose of the instance described by this schema.<br/><br/>See <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.1\">JSON Schema Specification</a></div></body></html>"
        },
        "description": {
            "type": "string",
            "description": "<html><body><div>The value of \"title\" and \"description\" keywords MUST be a string.\n\nBoth of these keywords can be used to decorate a user interface with information about the data produced by this user interface. A title will preferably be short, whereas a description will provide explanation about the purpose of the instance described by this schema.<br/><br/>See <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.1\">JSON Schema Specification</a></div></body></html>"
        },
        "default": true,
        "deprecated": {
            "type": "boolean",
            "default": false,
            "description": "<html><body><div>The value of this keyword MUST be a boolean. When multiple occurrences of this keyword are applicable to a single sub-instance, applications SHOULD consider the instance location to be deprecated if any occurrence specifies a true value.\n\nIf &quot;deprecated&quot; has a value of boolean true, it indicates that applications SHOULD refrain from usage of the declared property. It MAY mean the property is going to be removed in the future.\n\nA root schema containing &quot;deprecated&quot; with a value of true indicates that the entire resource being described MAY be removed in the future.\n\nWhen the &quot;deprecated&quot; keyword is applied to an item in an array by means of &quot;items&quot;, if &quot;items&quot; is a single schema, the deprecation relates to the whole array, while if &quot;items&quot; is an array of schemas, the deprecation relates to the corrosponding item according to the subschemas position.\n\nOmitting this keyword has the same behavior as a value of false.<br/><br/>See <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.3\">JSON Schema Specification</a></div></body></html>"
        },
        "readOnly": {
            "type": "boolean",
            "default": false,
            "description": "<html><body><div>The value of readOnly and writeOnly keywords MUST be a boolean. When multiple occurrences of these keywords are applicable to a single sub-instance, the resulting behavior SHOULD be as for a true value if any occurrence specifies a true value, and SHOULD be as for a false value otherwise.\n\nIf &quot;readOnly&quot; has a value of boolean true, it indicates that the value of the instance is managed exclusively by the owning authority, and attempts by an application to modify the value of this property are expected to be ignored or rejected by that owning authority.\n\nAn instance document that is marked as &quot;readOnly for the entire document MAY be ignored if sent to the owning authority, or MAY result in an error, at the authority's discretion.\n\nIf &quot;writeOnly&quot; has a value of boolean true, it indicates that the value is never present when the instance is retrieved from the owning authority. It can be present when sent to the owning authority to update or create the document (or the resource it represents), but it will not be included in any updated or newly created version of the instance.\n\nAn instance document that is marked as &quot;writeOnly&quot; for the entire document MAY be returned as a blank document of some sort, or MAY produce an error upon retrieval, or have the retrieval request ignored, at the authority's discretion.\n\nFor example, &quot;readOnly&quot; would be used to mark a database-generated serial number as read-only, while &quot;writeOnly&quot; would be used to mark a password input field.\n\nThese keywords can be used to assist in user interface instance generation. In particular, an application MAY choose to use a widget that hides input values as they are typed for write-only fields.\n\nOmitting these keywords has the same behavior as values of false.<br/><br/>See <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.4\">JSON Schema Specification</a></div></body></html>"
        },
        "writeOnly": {
            "type": "boolean",
            "default": false,
            "description": "<html><body><div>The value of readOnly and writeOnly keywords MUST be a boolean. When multiple occurrences of these keywords are applicable to a single sub-instance, the resulting behavior SHOULD be as for a true value if any occurrence specifies a true value, and SHOULD be as for a false value otherwise.\n\nIf &quot;readOnly&quot; has a value of boolean true, it indicates that the value of the instance is managed exclusively by the owning authority, and attempts by an application to modify the value of this property are expected to be ignored or rejected by that owning authority.\n\nAn instance document that is marked as &quot;readOnly for the entire document MAY be ignored if sent to the owning authority, or MAY result in an error, at the authority's discretion.\n\nIf &quot;writeOnly&quot; has a value of boolean true, it indicates that the value is never present when the instance is retrieved from the owning authority. It can be present when sent to the owning authority to update or create the document (or the resource it represents), but it will not be included in any updated or newly created version of the instance.\n\nAn instance document that is marked as &quot;writeOnly&quot; for the entire document MAY be returned as a blank document of some sort, or MAY produce an error upon retrieval, or have the retrieval request ignored, at the authority's discretion.\n\nFor example, &quot;readOnly&quot; would be used to mark a database-generated serial number as read-only, while &quot;writeOnly&quot; would be used to mark a password input field.\n\nThese keywords can be used to assist in user interface instance generation. In particular, an application MAY choose to use a widget that hides input values as they are typed for write-only fields.\n\nOmitting these keywords has the same behavior as values of false.<br/><br/>See <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.4\">JSON Schema Specification</a></div></body></html>"
        },
        "examples": {
            "type": "array",
            "items": true,
            "description": "<html><body><div>The value of this keyword MUST be an array. There are no restrictions placed on the values within the array. When multiple occurrences of this keyword are applicable to a single sub-instance, implementations MUST provide a flat array of all values rather than an array of arrays.\n\nThis keyword can be used to provide sample JSON values associated with a particular schema, for the purpose of illustrating usage. It is RECOMMENDED that these values be valid against the associated schema.<br/><br/>See <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.5\">JSON Schema Specification</a></div></body></html>"
        }
    }
}