task initValidation (type:Exec){
 String projectDir = "."
 doLast {
     if (!new File("${projectDir}/extracted/oxygen/").exists()) {
         ant.get(src: 'https://archives.oxygenxml.com/Oxygen/Editor/InstData25.0/All/oxygen.tar.gz', dest: "${projectDir}/oxygen.tar.gz", skipexisting: 'true')
         ant.untar(src: "${projectDir}/oxygen.tar.gz", dest: "${projectDir}/extracted", compression: 'gzip')
         new File("${projectDir}/extracted/oxygen/scriptinglicensekey.txt").write(System.getenv('SCRIPTING_LICENSE_KEY').replaceAll("  ", "\n"))
     }
    commandLine 'chmod', '700', '${projectDir}/build/extracted/oxygen/scripts/validate.bat'
 }
}

task runValidation(type:Exec, dependsOn: [initValidation]) {
  workingDir "${projectDir}/extracted/oxygen"
  commandLine "${projectDir}/extracted/oxygen/scripts/validate.bat", "${projectDir}/../json-schema", "-sf", "${projectDir}/../validateScript.xpr", "-rft", "html", "-rf", "${projectDir}/../validationReport.html"

  doLast {
        if(execResult.getExitValue() != 0) {
            println new File("${projectDir}/validationReport.html").text
            throw new TaskExecutionException( it,
                new Exception( "Validation failed, see task output for details: ")
            )
        }
    }
}

task postProcessValidation(dependsOn: [runValidation]) {
 String projectDir = "."
 doLast {
    ant.replace(
      file: '${projectDir}/../../site/validationReport.html',
  )
 }
}

defaultTasks 'runValidation'

